# References:
## https://github.com/marketplace/actions/merge-conflict-finder
## https://blog.marcnuri.com/triggering-github-actions-across-different-repositories
## https://github.com/marketplace/actions/merge-branch

name: New Release â€¢â€¢ ðŸš€ â€¢â€¢

on:
  workflow_dispatch:
    inputs:
      release:
        type: choice
        description: Release environemnt (If release is production build-type option will be ignored)
        required: true
        options:
          - beta
          - production
      build-type:
        type: choice
        description: Build type
        required: true
        options:
          - build
          - revision
          - minor
          - major
env:
  version-number: "0"

jobs:
  sync-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Check if mergeable â€¢â€¢ ðŸš€ â€¢â€¢
        uses: codex-/return-dispatch@v1
        id: return_dispatch
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          ref: refs/heads/${{ github.event.inputs.release }}
          repo: repo2
          owner: gemerich
          workflow: new-release.yml
      - name: Await Run ID ${{ steps.return_dispatch.outputs.run_id }}
        uses: Codex-/await-remote-run@v1.0.0
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          repo: repo2
          owner: gemerich
          run_id: ${{ steps.return_dispatch.outputs.run_id }}
          run_timeout_seconds: 300 # Optional
          poll_interval_ms: 5000 # Optional
  sync-branch2:
    runs-on: ubuntu-latest
    steps:
      - name: Check if mergeable
        uses: codex-/return-dispatch@v1
        id: return_dispatch
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          ref: refs/heads/${{ github.event.inputs.release }}
          repo: repo2
          owner: gemerich
          workflow: new-release.yml
      - name: Await Run ID ${{ steps.return_dispatch.outputs.run_id }}
        uses: Codex-/await-remote-run@v1.0.0
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          repo: repo2
          owner: gemerich
          run_id: ${{ steps.return_dispatch.outputs.run_id }}
          run_timeout_seconds: 300 # Optional
          poll_interval_ms: 5000 # Optional
  merge-branches:
    needs: [sync-branch, sync-branch2]
    runs-on: ubuntu-latest
    steps:
      - name: Merges branches â€¢â€¢ ðŸš€ â€¢â€¢
        uses: codex-/return-dispatch@v1
        id: return_dispatch
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          ref: ${{ github.ref }}
          repo: repo2
          owner: gemerich
          workflow: merge-beta.yml
      - name: Await Run ID ${{ steps.return_dispatch.outputs.run_id }}
        uses: Codex-/await-remote-run@v1.0.0
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          repo: repo2
          owner: gemerich
          run_id: ${{ steps.return_dispatch.outputs.run_id }}
          run_timeout_seconds: 300 # Optional
          poll_interval_ms: 5000 # Optional
  execute-tagging:
    needs: [merge-branches]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: beta
      - name: Set environment variables from project settings
        run: |
          exec .github/scripts/run.sh ${{ github.event.inputs.release }} ${{ github.event.inputs.build-type }}
      - name: Get version number
        run: echo "version-number=$(cat ./package.json | grep -m 1 version | sed 's/[^0-9.]//g')" >> $GITHUB_ENV
      - name: Test
        run: echo ${{ env.version-number }}
      - name: Test
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout development
          git merge origin/beta
          git push
          echo $?
  update-version-other-repos:
    needs: [sync-branch, sync-branch2, execute-tagging]
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.release }}
      url: "${{ github.event.inputs.release }} === beta ? http://asd.com : http://aaa.com"
    steps:
      - name: Merges branches â€¢â€¢ ðŸš€ â€¢â€¢
        uses: codex-/return-dispatch@v1
        id: return_dispatch
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          ref: ${{ github.ref }}
          repo: repo2
          owner: gemerich
          workflow: final-step.yml
          workflow_inputs: '{ "version_number": ${{ env.version-number }}, { "release": ${{ env.release }} }}'
      - name: Await Run ID ${{ steps.return_dispatch.outputs.run_id }}
        uses: Codex-/await-remote-run@v1.0.0
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          repo: repo2
          owner: gemerich
          run_id: ${{ steps.return_dispatch.outputs.run_id }}
          run_timeout_seconds: 300 # Optional
          poll_interval_ms: 5000 # Optional
